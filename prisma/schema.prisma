generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  
}

model User {
  id      String      @id
  email   String   @unique
  username String @unique
  displayName String? @unique
  bio String?
  location String?
  job String?
  website String?
  img String?
  cover String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //RELATION
  posts   Post[]

  likes Like[]
  
  saves SavePosts[]

  followers Follow[] @relation("UserFollowers")
  following Follow[] @relation("UserFollowings")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  description     String   @db.VarChar(255)
  img String?
  video String?
  isSensitive Boolean @default(false)


  //RELATION
  user    User     @relation(fields: [userId], references: [id])
  userId  String

  rePostId Int?
  rePost Post? @relation("RePosts",fields: [rePostId], references: [id])
  rePosts Post[] @relation("RePosts")

  parentPostId Int?
  parentPost Post? @relation("PostComments", fields: [parentPostId], references: [id])
  comments Post[] @relation("PostComments")

  likes Like[]
  saves SavePosts[]
}

model Like{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  //RELATION 
  userId String
  postId Int

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
}

model SavePosts{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  //RELATION 
  userId String
  postId Int

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
}


model Follow{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  //RELATION 
  followerId String
  followingId String

  follower User @relation("UserFollowers",fields: [followerId], references: [id])
  folowing User @relation("UserFollowings",fields: [followingId], references: [id])
}